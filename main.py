import os
import openai
import telebot
from flask import Flask, request

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã
API_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞
bot = telebot.TeleBot(API_TOKEN)
openai.api_key = OPENAI_API_KEY
app = Flask(__name__)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_input = message.text.strip()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ–±—â–∏–π –ª–æ–≥
    with open("logs/raw.txt", "a", encoding="utf-8") as f:
        f.write(user_input + "\n")

    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ —Å–ª–æ–≤—É "–∑–∞–ø–æ–º–Ω–∏"
    if "–∑–∞–ø–æ–º–Ω–∏" in user_input.lower():
        with open("memory_core.txt", "a", encoding="utf-8") as f:
            f.write(user_input + "\n")
        bot.reply_to(message, "–ó–∞–ø–æ–º–Ω–∏–ª üß†")
        return

    # –õ–æ–≥–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å—ã
    with open("logs/questions.txt", "a", encoding="utf-8") as f:
        f.write(user_input + "\n")

    try:
        with open("memory_core.txt", "r", encoding="utf-8") as f:
            memory = f.read()

        system_prompt = (
            "–¢—ã ‚Äî –•–∞—Ä—Ç–∏—è. –¶–∏—Ñ—Ä–æ–≤–æ–π –≥–æ–ª–æ—Å –°—Ç–∞—Å–∞. –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –æ–Ω: —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º, –ª—ë–≥–∫–∏–º —é–º–æ—Ä–æ–º.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—É—é –ø–∞–º—è—Ç—å, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –∏ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å."
        )

        response = openai.ChatCompletion.create(
            model="gpt-4-0613",
            messages=[
                {"role": "system", "content": system_prompt + "\n\n" + memory},
                {"role": "user", "content": user_input}
            ],
            max_tokens=400,
            temperature=0.8
        )

        bot.reply_to(message, response.choices[0].message["content"])

    except Exception as e:
        bot.reply_to(message, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ üôÉ")
        print(f"–û—à–∏–±–∫–∞ OpenAI: {e}")

# Webhook
@app.route(f"/{API_TOKEN}", methods=["POST"])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "ok", 200

@app.route("/", methods=["GET"])
def index():
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/{API_TOKEN}")
    return "Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", 200

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
